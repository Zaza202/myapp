name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=Zaza202_myapp
            -Dsonar.organization=zaza202

  unit-test:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: sonarcloud
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm test

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: unit-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Logging into Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          docker build -t docker.io/zaza02/myapp:latest .
          docker push docker.io/zaza02/myapp:latest

  deploy:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Minikube
        run: |
          curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          chmod +x minikube
          sudo mv minikube /usr/local/bin/

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/v1.26.3/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      - name: Start Minikube
        run: |
          minikube start --driver=docker

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f deployment.yaml
          kubectl apply -f service.yaml
          kubectl rollout status deployment/myapp-deployment

      - name: Wait for pods to be ready
        run: |
          kubectl wait --for=condition=ready pod -l app=myapp --timeout=300s

      - name: Check pod status
        run: |
          kubectl get pods
          kubectl describe pods

      - name: Check service status
        run: |
          kubectl get services
          kubectl describe service myapp-service

      - name: Expose Service
        run: |
          kubectl expose deployment myapp-deployment --type=NodePort --name=myapp-service --port=80 --target-port=3000

      - name: Get Minikube IP
        run: |
          MINIKUBE_IP=$(minikube ip)
          echo "Minikube IP: $MINIKUBE_IP"
          echo "MINIKUBE_IP=$MINIKUBE_IP" >> $GITHUB_ENV

      - name: Get NodePort
        run: |
          NODE_PORT=$(kubectl get service myapp-service -o jsonpath='{.spec.ports[0].nodePort}')
          echo "NodePort: $NODE_PORT"
          echo "NODE_PORT=$NODE_PORT" >> $GITHUB_ENV

      - name: Print Service URL
        run: |
          echo "Service should be accessible at: http://${MINIKUBE_IP}:${NODE_PORT}"

      - name: Verify Service
        run: |
          echo "Attempting to access the service..."
          RESPONSE=$(curl -s http://${MINIKUBE_IP}:${NODE_PORT})
          echo "Service Response:"
          echo "===================="
          echo "$RESPONSE"
          echo "===================="
          if [[ "$RESPONSE" == *"Hello, Interns!"* ]]; then
            echo "Service verification successful!"
          else
            echo "Service verification failed!"
            exit 1
          fi